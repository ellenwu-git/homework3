---
title: "ECON 470 Homework 3"
author: "Ellen Wu"
format: pdf
execute:
    echo: false
---
####### The link to my repository: https://github.com/ellenwu-git/homework3 

```{python}
#| echo: false

# Import libraries
import pandas as pd
import numpy as np
import os
from sklearn.linear_model import LogisticRegression
import statsmodels.api as sm
from scipy.spatial.distance import cdist
import matplotlib.pyplot as plt
import statsmodels.api as sm
import matplotlib.ticker as ticker
import matplotlib
import seaborn as sns
from statsmodels.formula.api import ols
from causalinference import CausalModel
from IPython.display import Markdown, display
from linearmodels.iv import IV2SLS
import warnings
warnings.simplefilter('ignore')

# Load data
df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")
df['tax_change'] = df.groupby('state')['tax_state'].diff().notna()
```

####### 1. Present a bar graph showing the proportion of states with a change in their cigarette tax in each year from 1970 to 1985.

```{python}
#| echo: false

#finding prop of states that had change in tax from 1970-1986
df = df.sort_values(by=['state', 'Year'])
df = df[(df['Year']>=1970) & (df['Year']<=1985)]
df['tax_change'] = df.groupby('state')['tax_state'].diff().ne(0).astype(int)
tax_change = df.groupby('Year')['tax_change'].mean()


plt.bar(tax_change.index, tax_change.values, color='pink')
plt.title('Proportion of States with Change in Cigarette Tax (1970-1985)')
plt.xlabel('Year')
plt.show()

```

\newpage

####### 2. Plot on a single graph the average tax (in 2012 dollars) on cigarettes and the average price of a pack of cigarettes from 1970 to 2018.

```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")
 
# Filter for years 1970 to 2018
df = df[(df['Year'] >= 1970) & (df['Year'] <= 2018)]

# Use CPI to adjust to 2012 dollars
# Assuming 2012 CPI = 230 (You should check the exact CPI value for 2012 from your dataset if available)
df['cost_per_pack_2012'] = df['cost_per_pack'] * (230 / df['index'])
df['tax_state_2012'] = df['tax_state'] * (230 / df['index'])

# Group by year and compute average across all states
annual_avg = df.groupby('Year').agg({
    'cost_per_pack_2012': 'mean',
    'tax_state_2012': 'mean'
}).reset_index()

# Plot
plt.figure(figsize=(12, 6))

plt.plot(annual_avg['Year'], annual_avg['cost_per_pack_2012'], label='Average Price per Pack (2012 Dollars)', color='pink')
plt.plot(annual_avg['Year'], annual_avg['tax_state_2012'], label='Average Tax per Pack (2012 Dollars)', color='purple')

plt.title('Average Price and Tax per Pack (1970-2018) in 2012 Dollars')
plt.xlabel('Year')
plt.ylabel('Dollars (2012)')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)

plt.show()

```

\newpage 

####### 3. Identify the 5 states with the highest increases in cigarette prices (in dollars) over the time period. Plot the average number of packs sold per capita for those states from 1970 to 2018.

```{python}
#| echo: false

# Identify price change over time per state
price_change = df.groupby('state')['cost_per_pack'].agg(['first', 'last']).reset_index()
price_change['price_increase'] = price_change['last'] - price_change['first']

# Get top 5 states with highest price increases
top5_states = price_change.sort_values('price_increase', ascending=False).head(5)['state']

# Filter dataset to only those states
top5_df = df[df['state'].isin(top5_states)]

# Group by year and state to calculate average packs sold per capita
packs_per_capita = top5_df.groupby(['Year', 'state'])['sales_per_capita'].mean().reset_index()

for state in top5_states:
    state_data = packs_per_capita[packs_per_capita['state'] == state]
    plt.plot(state_data['Year'], state_data['sales_per_capita'], label=state)

plt.title('Average Packs Sold Per Capita (Top 5 States with Highest Price Increases)')
plt.xlabel('Year')
plt.ylabel('Packs Sold Per Capita')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)

plt.show()

```

\newpage

####### 4. Identify the 5 states with the lowest increases in cigarette prices over the time period. Plot the average number of packs sold per capita for those states from 1970 to 2018.

```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")

# Filter for years 1970-2018
df = df[(df['Year'] >= 1970) & (df['Year'] <= 2018)]

# Compute the price difference between 1970 and 2018
price_change = df.groupby('state')['price_cpi'].agg(['first', 'last'])
price_change['price_increase'] = price_change['last'] - price_change['first']

# Identify the 5 states with the lowest price increase
bottom_5_states = price_change.nsmallest(5, 'price_increase').index.tolist()

# Filter the dataset for these states only
df = df[df['state'].isin(bottom_5_states)]

# Compute the average packs sold per capita for these states each year
avg_sales_per_year = df.groupby(['Year', 'state'])['sales_per_capita'].mean().unstack

# Regenerate the correct DataFrame
avg_sales_per_year = df.groupby(['Year', 'state'])['sales_per_capita'].mean().unstack()

plt.figure(figsize=(10, 6))

for state in bottom_5_states:
    if state in avg_sales_per_year.columns:
        plt.plot(avg_sales_per_year.index, avg_sales_per_year[state], label=state)
    else:
        print(f"Warning: {state} not found in avg_sales_per_year columns")

# Graph formatting
plt.xlabel('Year')
plt.ylabel('Packs Sold Per Capita')
plt.title('Average Cigarette Packs Sold Per Capita (Bottom 5 States with Lowest Price Increase, 1970â€“2018)')
plt.legend(title="State")
plt.grid(True, linestyle="--", alpha=0.7)
plt.show()

```

\newpage

####### 5. Compare the trends in sales from the 5 states with the highest price increases to those with the lowest price increases.

```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")

# Filter for years 1970-2018
df = df[(df['Year'] >= 1970) & (df['Year'] <= 2018)]

# Compute the first and last cigarette price for each state
price_change = df.groupby("state")["price_cpi"].agg(["first", "last"])
price_change["price_increase"] = price_change["last"] - price_change["first"]

# Identify the 5 states with the highest price increase
top_5_states = price_change.nlargest(5, "price_increase").index.tolist()

# Identify the 5 states with the lowest price increase
bottom_5_states = price_change.nsmallest(5, "price_increase").index.tolist()

# Filter the dataset for these states only
df_top = df[df["state"].isin(top_5_states)]
df_bottom = df[df["state"].isin(bottom_5_states)]

# Compute the average packs sold per capita for each group
avg_sales_top = df_top.groupby('Year')['sales_per_capita'].mean()
avg_sales_bottom = df_bottom.groupby('Year')['sales_per_capita'].mean()

# Group by year and calculate mean sales_per_capita for each group (top 5 and bottom 5)

# Plot the trends for both groups
plt.figure(figsize=(10, 6))
plt.plot(avg_sales_top.index, avg_sales_top, label='Top 5 States (Highest Price Increase)', color='pink', linewidth=2)
plt.plot(avg_sales_bottom.index, avg_sales_bottom, label='Top 5 States (Lowest Price Increase)', color='purple', linewidth=2)

# Format Graph
plt.xlabel('Year')
plt.ylabel('Packs Sold Per Capita')
plt.legend()
plt.title('Comparison of Cigarette Sales: Highest vs Lowest Price Increases (1970-2018)')
plt.show()

```
Based on the graph, states with the highest price increases experienced a steeper decline in average cigarette packs sold per capita over time compared to states with the lowest price increases. The states with the lowest price increases initially had higher per capita sales and, while they also saw a decline, the decline was more gradual. This suggests that higher cigarette prices are associated with sharper reductions in cigarette consumption, supporting the idea that cigarette demand is responsive to price increases.

\newpage

####### 6. Focusing only on the time period from 1970 to 1990, regress log sales on log prices to estimate the price elasticity of demand over that period. Interpret your results.

```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")

# Filter for years 1970-1990
df = df[(df['Year'] >= 1970) & (df['Year'] <= 1990)]

# Take the natural log of sales_per_capita and price_cpi
df['log_sales'] = np.log(df['sales_per_capita'])
df['log_price'] = np.log(df['price_cpi'])

# Drop any rows with missing values
df = df.dropna(subset=['log_sales', 'log_price'])

# Define dependent (Y) and independent (X) variables
X = sm.add_constant(df['log_price'])
Y = df['log_sales']

# Run and print OLS regression
model = sm.OLS(Y, X).fit()
print(model.summary())

```
The coefficient on log_price is -0.8094, meaning that a 1% increase in price is associated with a 0.81% decrease in cigarette sales. This suggests that demand for cigarettes is inelastic, but somewhat responsive to price changes. The p-value for log_price is 0.000, which is highly significant, indicating strong evidence that price affects cigarette sales.

\newpage

####### 7. Again limiting to 1970 to 1990, regress log sales on log prices using the total (federal and state) cigarette tax (in dollars) as an instrument for log prices. Interpret your results and compare your estimates to those without an instrument. Are they different? If so, why?

```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3/data/output/Taxburden_data.csv")

# Filter for years 1970-1990
df = df[(df['Year'] >= 1970) & (df['Year'] <= 1990)]

# Take the natural log of sales, price, and tax
df['log_sales'] = np.log(df['sales_per_capita'])
df['log_price'] = np.log(df['price_cpi'])
df['log_tax'] = np.log(df['tax_dollar'])

# Drop any rows with  missing values
df = df.dropna(subset=['log_sales', 'log_price', 'log_tax'])

# First-Stage Regresson: Predict log(price) using log(tax) 
X_first_stage = sm.add_constant(df['log_tax']) #IV
Y_first_stage = df['log_price'] # Endogenous variable

first_stage_model = sm.OLS(Y_first_stage, X_first_stage).fit()
df['log_price_hat'] = first_stage_model.predict(X_first_stage)

print('First-Stage Regression Results:')
print(first_stage_model.summary())

# Second-Stage Regresson: Use predicited log(price) 
X_second_stage = sm.add_constant(df['log_price_hat']) # use predicted price
Y_second_stage = df['log_sales'] # dependent variable

second_stage_model = sm.OLS(Y_second_stage, X_second_stage).fit()

print("\nSecond-Stage (IV) Regression Results:")
print(second_stage_model.summary())

# Extract estimated price elasticity
elasticity_iv = second_stage_model.params["log_price_hat"]
print(f"\nIV-Estimated Price Elasticity of Demand: {elasticity_iv:.3f}")

# Compare IV Estimates to OLS Estimates 
# Re-run the simple OLS regression (from Q6) for direct comparison
X_ols = sm.add_constant(df['log_price'])
ols_model = sm.OLS(Y_second_stage, X_ols).fit()
elasticity_ols = ols_model.params['log_price']

print(f"\nOLS-Estimated Price Elasticity: {elasticity_ols:.3f}")
print(f"Difference between OLS and IV Estimates: {elasticity_ols - elasticity_iv:.3f}")

```
Based on the results, when using the total cigarette tax as an instrument for log prices, the IV-estimated price elasticity of demand is -0.923, compared to -0.809 from the OLS regression without an instrument. The IV estimate is slightly more negative, suggesting that the OLS approach may have been biased toward a smaller (less negative) elasticity, potentially due to endogeneity in the relationship between price and sales. The first-stage regression confirms that log tax is a strong instrument for log price, as indicated by the high F-statistic (1725) and the significant relationship between log tax and log price (coefficient = 0.3328, p < 0.001). This suggests that IV is addressing potential simultaneity bias, making the IV estimate more reliable in capturing the causal effect of price on cigarette demand.

\newpage

####### 8. Show the first stage and reduced-form results from the instrument.
```{python}
#| echo: false

# Filter data for 1970 to 1990
df = df[(df['Year'] >= 1970) & (df['Year'] <= 1990)]

df = df.dropna(subset=['cost_per_pack', 'sales_per_capita', 'tax_dollar'])

# Take logs
df['log_sales_per_capita'] = np.log(df['sales_per_capita'])
df['log_price_per_pack'] = np.log(df['cost_per_pack'])

X_first_stage = sm.add_constant(df['tax_dollar'])
y_first_stage = df['log_price_per_pack']

first_stage_model = sm.OLS(y_first_stage, X_first_stage).fit()
print("First Stage Regression Results:")
print(first_stage_model.summary())

X_reduced_form = sm.add_constant(df['tax_dollar'])
y_reduced_form = df['log_sales_per_capita']

reduced_form_model = sm.OLS(y_reduced_form, X_reduced_form).fit()
print("\nReduced Form Regression Results:")
print(reduced_form_model.summary())
```

\newpage

####### 9. Repeat questions 1-3 focusing on the period from 1991 to 2015.
```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3_attempt1-/data/output/TaxBurden_Data.csv")
df['tax_change'] = df.groupby('state')['tax_state'].diff().notna()
prop_change = df.groupby('Year')['tax_change'].mean()

# Filter for the period 1991 to 2015
df = df[(df['Year'] >= 1991) & (df['Year'] <= 2015)]

# Sort by state and year to allow comparison across years
df = df.sort_values(by=['state', 'Year'])

# Create a column that identifies whether the tax changed compared to the previous year
df['tax_change'] = df.groupby('state')['tax_state'].diff().notnull() & (df.groupby('state')['tax_state'].diff() != 0)

# Calculate the proportion of states with a tax change each year
# Total number of states each year
states_per_year = df.groupby('Year')['state'].nunique()

# Number of states with a tax change each year
states_with_change_per_year = df[df['tax_change']].groupby('Year')['state'].nunique()

# Proportion of states with a tax change
proportion_with_change = (states_with_change_per_year / states_per_year).fillna(0).reset_index()
proportion_with_change.columns = ['Year', 'Proportion']

# Plot the bar graph
plt.figure(figsize=(12, 6))
plt.bar(proportion_with_change['Year'], proportion_with_change['Proportion'], color='pink')

plt.title('Proportion of States with a Change in Cigarette Tax (1991-2015)')
plt.xlabel('Year')
plt.ylabel('Proportion of States with Tax Change')
plt.xticks(proportion_with_change['Year'], rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)

plt.show()

df = df[(df['Year'] >= 1991) & (df['Year'] <= 2015)]

# Use CPI to adjust to 2012 dollars
# Assuming 2012 CPI = 230 (You should check the exact CPI value for 2012 from your dataset if available)
df['cost_per_pack_2012'] = df['cost_per_pack'] * (230 / df['index'])
df['tax_state_2012'] = df['tax_state'] * (230 / df['index'])

# Group by year and compute average across all states
annual_avg = df.groupby('Year').agg({
    'cost_per_pack_2012': 'mean',
    'tax_state_2012': 'mean'
}).reset_index()

# Plot
plt.figure(figsize=(12, 6))

plt.plot(annual_avg['Year'], annual_avg['cost_per_pack_2012'], label='Average Price per Pack (2012 Dollars)', color='pink')
plt.plot(annual_avg['Year'], annual_avg['tax_state_2012'], label='Average Tax per Pack (2012 Dollars)', color='purple')

plt.title('Average Price and Tax per Pack (1991-2015) in 2012 Dollars')
plt.xlabel('Year')
plt.ylabel('Dollars (2012)')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)

plt.show()

df = df[(df['Year'] >= 1991) & (df['Year'] <= 2015)]

# Identify price change over time per state
price_change = df.groupby('state')['cost_per_pack'].agg(['first', 'last']).reset_index()
price_change['price_increase'] = price_change['last'] - price_change['first']

# Get top 5 states with highest price increases
top5_states = price_change.sort_values('price_increase', ascending=False).head(5)['state']

# Filter dataset to only those states
top5_df = df[df['state'].isin(top5_states)]

# Group by year and state to calculate average packs sold per capita
packs_per_capita = top5_df.groupby(['Year', 'state'])['sales_per_capita'].mean().reset_index()

for state in top5_states:
    state_data = packs_per_capita[packs_per_capita['state'] == state]
    plt.plot(state_data['Year'], state_data['sales_per_capita'], label=state)

plt.title('Average Packs Sold Per Capita (Top 5 States with Highest Price Increases)')
plt.xlabel('Year')
plt.ylabel('Packs Sold Per Capita')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)

plt.show()
```

\newpage

####### 10. Compare your elasticity estimates from 1970-1990 versus those from 1991-2015. Are they different? If so, why?
```{python}
#| echo: false

df = pd.read_csv("/Users/ellenwu/homework3_attempt1-/data/output/TaxBurden_Data.csv")
# Function to estimate price elasticity of demand for a given period
def estimate_elasticity(df, start_year, end_year):
    df_period = df[(df['Year'] >= start_year) & (df['Year'] <= end_year)].copy()

    df_period["log_sales"] = np.log(df_period["sales_per_capita"])
    df_period["log_price"] = np.log(df_period["price_cpi"])

    df_period = df_period.dropna(subset=["log_sales", "log_price"])

    X = sm.add_constant(df_period["log_price"])
    Y = df_period["log_sales"]

    model = sm.OLS(Y, X).fit()

    elasticity = model.params["log_price"]
    print(f"\n=== Price Elasticity Estimate for {start_year}-{end_year} ===")
    print(model.summary())
    print(f"Estimated Price Elasticity: {elasticity:.3f}")

    return elasticity

# Estimate elasticity for 1970-1990
elasticity_1970_1990 = estimate_elasticity(df, 1970, 1990)

# Estimate elasticity for 1991-2015
elasticity_1991_2015 = estimate_elasticity(df, 1991, 2015)

# Compare the results
print("\n=== Elasticity Comparison ===")
print(f"Elasticity (1970-1990): {elasticity_1970_1990:.3f}")
print(f"Elasticity (1991-2015): {elasticity_1991_2015:.3f}")
print(f"Difference: {elasticity_1970_1990 - elasticity_1991_2015:.3f}")

```
Compared to my elasticity estimate for 1970-1990, the estimated price elasticity of demand for 1991-2015 was -0.997, indicating that demand became more elastic during this period. This suggests that consumers became more sensitive to price changes, although demand remained inelastic (since the absolute value is still less than 1). While price had a greater influence on purchasing decisions, factors such as addiction or brand loyalty likely continued to play a significant role.


